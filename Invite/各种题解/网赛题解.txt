Gingers and Mints
Author:fcburce
题意：
每种植物会占据尽可能大的空间，种两种植物，问其中姜为奇数的情况。
解答：
dfs算出有多少个联通块，答案是2^(n-1),n为联通块个数(数据种没有n=0的情况)

Flowers
Author:ahm001
题意：
n个数字构成环，旋转或翻转之后算同一种，有多少种构成方法。
解答：
先把1旋转到最上面，于是顺时针构成一条链，翻转相当与倒序。即答案为((n-1)!)/2
当n<3时特殊处理即可。

Big Jig
Author:ZiP(translate:ahm001)
标准的线段树区间合并，每个节点存四种不同边状态的（左凸又凹，左凹右凸，左凸右凸，左凹右凹），然后合并的时候可能来自左边、右边或者左右合并，然后注意如果结果是负分可以不选，即为0

LAMP
Author:zp(translate:ahm001)
题意：
有一条路，问每个路灯最少需要多远才能照亮整条路
解答：
二分，或者结果设所有灯排序后，第一盏灯和起点的距离ds,最后一盏灯和终点的距离de,连续的两个灯之间最大的距离gap.答案就是min{ds,de,gap}

Flowers
Author:ahm001
题意：
定义一个数的位方差为每个数字中的每一位数当成一个数字，这些数字的方差。求l~r之间的位方差期望。
解答：
方差公式：平方的期望-期望的平方。
由于答案乘上了(r-l+1)， 所以只需要算位方差之和。把位数相同的数字分成一类（这样他们在乘上sqr(frac(9))的时候系数相同），并且根据他们的平方和与数字的和进行数位dp即可。

比赛的时候看到了一个挺棒的最法：提出系数分开平方的期望和期望的平方直接求和后相减。可以大大降低状态数，各位也可以想想看。

A Stones Game
Author:xujian
题意：
n堆石子，每一次每个人可以选择m个数中的一个数，拿走对应数量石子的胜。问第一步走什么保证有必胜策略。
题解：
可以注意到这些数字非常小。所以每一步的状态之多和前10步的状态有关。那么至多经过(3^10)步就会面临之前相同的情况，这样救有了循环。利用循环节加速中间过程即可。
注意有一种情况双方都没有必胜策略。

Eliminating Fun
Author:Acsorry
题意：
每次可以更改字符串中的字符，问操作后至少切掉多少点使得其没有连续的两个点
解答：
对于每个操作，仅判断是增加了连续点区间还是合并了连续点区间即可，然后最小操作数是点数减区间数。

这一题出题人的数据生成器出现了一些问题，我们在昨晚还在修改。最后还是出了一些小状况，还请海涵。

Save Pang Pang
Author:zp(translate:ahm001)
题意：
从n个点m条边，从起点出发，能否在k秒内到终点。
解答：
最短路，以起点跑一遍dijkstra，然后判断到D点时间是否小于等于K即可。

Sharing!
Author:fcbruce(translate:ahm001)
题意：
一个数列，找出两个数a[i], a[j]，使得s = max(|j - i| * min(a[i], a[j]))
解答：
用双指针一个从前，一个从后向中间扫，每次移动较小的，max((j-i)*min(a[i],a[j]))
本来想出3s卡掉nlogn的做法的....后来发现还是有不少nlogn被卡掉了.....。

Unstable Portal
Author:ZiP(translate:ahm001)
开个二维数组for一遍就可以了，只是判断一下那个传送门之前有没有别人用过，注意自己用过的传送门是可以再用的。